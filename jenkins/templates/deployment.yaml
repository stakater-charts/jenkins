---
apiVersion: v1
kind: List
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
{{ include "labels.stakater" . | indent 6 }}
{{ include "labels.chart" . | indent 6 }}
    name: {{ template "name" . }}
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
{{ include "labels.selector" . | indent 8 }}
    template:
      metadata:
        labels:
{{ include "labels.selector" . | indent 10 }}
      spec:
        initContainers:
        - name: fmp-volume-permission
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ['chmod', '777', '/var/jenkins_home']
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-home
        containers:
        - env:
          - name: PROJECT_NAMESPACE
            value: ${PROJECT_NAMESPACE}
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: "true"
          - name: KUBERNETES_MASTER
            value: {{ .Values.kubernetes.host }}
          - name: MAX_METASPACE_SIZE
            value: 200m
          - name: KEYCLOAK_URL
            valueFrom:
              configMapKeyRef:
                key: keycloak.url
                name: {{ template "name" . }}
          - name: KEYCLOAK_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: client.secret
                name: {{ template "name" . }}
# TODO: Pass this env var to pods and update pipelines
          - name: DOCKER_REGISTRY_URL
            valueFrom:
              configMapKeyRef:
                key: external-docker-registry-url
                name: fabric8-pipelines
          - name: JENKINS_OPTS
            value: "-Dgroovy.use.classvalue=true"
          - name: JAVA_HOME
            value: "/etc/alternatives/java_sdk"
          - name: MAVEN_OPTS
            value: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
          - name: RECOMMENDER_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: jenkins-recommender-api-token
          image: "{{ .Values.jenkins.image.name }}:{{ .Values.jenkins.image.tag }}"
          imagePullPolicy: {{ .Values.jenkins.image.pullPolicy }}
          lifecycle:
            preStop:
              exec:
                command: ['sh', '/var/lib/jenkins/pre-shutdown.sh']
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 420
            timeoutSeconds: 10
          name: {{ template "name" . }}
          ports:
          - containerPort: 50000
            name: slave
          - containerPort: 8080
            name: http
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 300
            timeoutSeconds: 10
          # resources:
          #   limits:
          #     memory: 4Gi
          #     cpu: "2"
          #   requests:
          #     memory: 3Gi
          #     cpu: "1"
          volumeMounts:
          - mountPath: /var/jenkins_home
            name: jenkins-home
            readOnly: false
          - mountPath: /usr/local/bin/configuration/
            name: jenkins-config
          - mountPath: /usr/local/bin/pgp-configuration/
            name: helm-pgpkey-config
        serviceAccountName: {{ template "name" . }}
        serviceAccount: {{ template "name" . }}
        volumes:
        - name: jenkins-home
        {{- if .Values.jenkins.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.jenkins.persistence.volumeClaimName }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - configMap:
            name: {{ template "name" . }}        
          name: jenkins-config        
        - secret:
            secretName: helm-pgp-key
          name: helm-pgpkey-config
